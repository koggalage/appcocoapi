// <auto-generated />
using System;
using CocoChicApp.EF.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CocoChicApp.EF.Migrations
{
    [DbContext(typeof(BeautyPro_COCOContext))]
    [Migration("20200509083315_readd")]
    partial class readd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CocoChicApp.EF.Models.TblBranch", b =>
                {
                    b.Property<int>("BranchId");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int>("CompanyId");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Fax")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Tp1")
                        .IsRequired()
                        .HasColumnName("TP1")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("Tp2")
                        .HasColumnName("TP2")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("BranchId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Tbl_Branch");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblCompany", b =>
                {
                    b.Property<int>("CompanyId");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(350)
                        .IsUnicode(false);

                    b.HasKey("CompanyId")
                        .HasName("PK_Tbl_Master_Company");

                    b.ToTable("Tbl_Company");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblConfig", b =>
                {
                    b.Property<int>("ConfigId");

                    b.Property<decimal>("AbsentDeductionRatio")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PresentAllawancesRatio")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ConfigId");

                    b.ToTable("Tbl_Config");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblCustomer", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Address")
                        .HasMaxLength(350)
                        .IsUnicode(false);

                    b.Property<int>("BranchId");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("EnteredBy");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool?>("IsFilledInitConcern");

                    b.Property<string>("LoyaltyCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Profession")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SignatureURL");

                    b.HasKey("CustomerId")
                        .HasName("PK_Tbl_Master_Customer");

                    b.HasIndex("BranchId");

                    b.ToTable("Tbl_Customer");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblCustomerGiftVoucher", b =>
                {
                    b.Property<string>("GvinvoiceNo")
                        .HasColumnName("GVInvoiceNo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("BranchId");

                    b.Property<string>("CancelReason")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("CanceledBy");

                    b.Property<DateTime?>("CanceledDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("DepartmentId");

                    b.Property<decimal>("DueAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("EnteredBy");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InvDateTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsCanceled");

                    b.Property<bool>("IsRedeem");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Ptid")
                        .HasColumnName("PTId");

                    b.Property<decimal>("SubTotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TransType");

                    b.Property<int?>("Ttid")
                        .HasColumnName("TTId");

                    b.Property<string>("VoucherNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("GvinvoiceNo");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Ptid");

                    b.HasIndex("Ttid");

                    b.ToTable("Tbl_CustomerGiftVoucher");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblCustomerInvoiceHeader", b =>
                {
                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("AmendedReason");

                    b.Property<int>("BranchId");

                    b.Property<string>("CancelReason")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("CanceledBy");

                    b.Property<DateTime?>("CanceledDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Cctid")
                        .HasColumnName("CCTId");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("CustomerScheduleTreatmentCstid");

                    b.Property<int>("DepartmentId");

                    b.Property<int>("EnteredBy");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<string>("GvinvoiceNo")
                        .HasColumnName("GVInvoiceNo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("InvDateTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsAmended");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("ProductDueAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ProductSubTotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ProductTaxAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Ptid")
                        .HasColumnName("PTId");

                    b.Property<int>("Status");

                    b.Property<string>("TransType")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<decimal>("TreatmentDiscountAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TreatmentDueAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TreatmentSubTotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TreatmentTaxAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("InvoiceNo");

                    b.HasIndex("Cctid");

                    b.HasIndex("CustomerId");

                    b.HasIndex("CustomerScheduleTreatmentCstid");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Ptid");

                    b.ToTable("Tbl_CustomerInvoiceHeader");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblCustomerInvoiceProducts", b =>
                {
                    b.Property<int>("Cipid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CIPId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Empno");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Cipid");

                    b.HasIndex("Empno");

                    b.HasIndex("InvoiceNo");

                    b.HasIndex("ProductId");

                    b.ToTable("Tbl_CustomerInvoiceProducts");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblCustomerInvoiceTreatment", b =>
                {
                    b.Property<int>("Citid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CITId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Cstid");

                    b.Property<int>("Empno")
                        .HasColumnName("EMPNo");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Qty");

                    b.Property<int>("Ttid")
                        .HasColumnName("TTId");

                    b.HasKey("Citid");

                    b.HasIndex("Cstid");

                    b.HasIndex("Empno");

                    b.HasIndex("InvoiceNo");

                    b.HasIndex("Ttid");

                    b.ToTable("Tbl_CustomerInvoiceTreatment");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblCustomerSchedule", b =>
                {
                    b.Property<int>("Csid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CSId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BookedDate")
                        .HasColumnType("date");

                    b.Property<int>("BranchId");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DepartmentId");

                    b.Property<int>("EnteredBy");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Csid");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Tbl_CustomerSchedule");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblCustomerScheduleTreatment", b =>
                {
                    b.Property<int>("Cstid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CSTId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Csid")
                        .HasColumnName("CSId");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate");

                    b.Property<int>("Empno")
                        .HasColumnName("EMPNo");

                    b.Property<TimeSpan>("EndTime");

                    b.Property<int>("Qty");

                    b.Property<TimeSpan>("StartTime");

                    b.Property<int>("Ttid")
                        .HasColumnName("TTId");

                    b.HasKey("Cstid");

                    b.HasIndex("Csid");

                    b.HasIndex("Empno");

                    b.HasIndex("Ttid");

                    b.ToTable("Tbl_CustomerScheduleTreatment");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblEmployeeAllowances", b =>
                {
                    b.Property<int>("Eaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EAId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AllowanceId");

                    b.Property<decimal>("AllowanceValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("BranchId");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Empno")
                        .HasColumnName("EMPNo");

                    b.Property<int>("EnteredBy");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("MonthId");

                    b.HasKey("Eaid")
                        .HasName("PK_Tbl_EmployeeAllowances_1");

                    b.HasIndex("AllowanceId");

                    b.HasIndex("Empno");

                    b.ToTable("Tbl_EmployeeAllowances");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblEmployeeAttendance", b =>
                {
                    b.Property<int>("AttendanceId");

                    b.Property<int>("BranchId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("Empno")
                        .HasColumnName("EMPNo");

                    b.Property<DateTime>("InTime")
                        .HasColumnType("datetime");

                    b.Property<decimal>("LateMins")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("MonthId");

                    b.Property<decimal>("Ot1")
                        .HasColumnName("OT1")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("OutTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<decimal>("WorkedHrs")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("AttendanceId");

                    b.ToTable("Tbl_EmployeeAttendance");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblEmployeeBasicSalary", b =>
                {
                    b.Property<int>("Ebsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EBSId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BasicSalaryValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("BranchId");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Empno")
                        .HasColumnName("EMPNo");

                    b.Property<int>("EnteredBy");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("MonthId");

                    b.HasKey("Ebsid");

                    b.HasIndex("Empno");

                    b.ToTable("Tbl_EmployeeBasicSalary");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblEmployeeCommision", b =>
                {
                    b.Property<int>("Ecid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ECId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId");

                    b.Property<decimal>("CommisionValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("CommissionId");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Empno")
                        .HasColumnName("EMPNo");

                    b.Property<int>("EnteredBy");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("MonthId");

                    b.HasKey("Ecid")
                        .HasName("PK_Tbl_EmployeeCommision_1");

                    b.HasIndex("CommissionId");

                    b.HasIndex("Empno");

                    b.ToTable("Tbl_EmployeeCommision");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblEmployeeDeduction", b =>
                {
                    b.Property<int>("Edid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EDId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId");

                    b.Property<int>("DeductionId");

                    b.Property<decimal?>("DeductionValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Empno")
                        .HasColumnName("EMPNo");

                    b.Property<int>("EnteredBy");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("MonthId");

                    b.HasKey("Edid")
                        .HasName("PK_Tbl_EmployeeDeduction_1");

                    b.HasIndex("DeductionId");

                    b.HasIndex("Empno");

                    b.ToTable("Tbl_EmployeeDeduction");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblEmployeeDetail", b =>
                {
                    b.Property<int>("Empno")
                        .HasColumnName("EMPNo");

                    b.Property<string>("Address")
                        .HasMaxLength(350);

                    b.Property<string>("BankAccountNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("BankId");

                    b.Property<decimal>("BasicSalary")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("BranchId");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int>("CountryId");

                    b.Property<DateTime>("DateOfJoin")
                        .HasColumnType("date");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DepartmentId");

                    b.Property<int>("DesignationId");

                    b.Property<DateTime?>("Dob")
                        .HasColumnName("DOB")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmergencyContactNo")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("EmergencyContactPerson")
                        .HasMaxLength(100);

                    b.Property<int>("EnteredBy");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Gender")
                        .HasMaxLength(20);

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int?>("NationalityId");

                    b.Property<string>("PassportNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .HasMaxLength(200);

                    b.HasKey("Empno");

                    b.HasIndex("BankId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("NationalityId");

                    b.ToTable("Tbl_EmployeeDetail");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblEmployeeLeave", b =>
                {
                    b.Property<int>("EmployeeLeaveId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Empno")
                        .HasColumnName("EMPNo");

                    b.Property<int>("EnteredBy");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsNope");

                    b.Property<int>("LeaveTypeId");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Remark")
                        .HasMaxLength(150);

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime");

                    b.HasKey("EmployeeLeaveId");

                    b.HasIndex("Empno");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("Tbl_EmployeeLeave");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblEmployeeRoster", b =>
                {
                    b.Property<int>("RosterId");

                    b.Property<int>("BranchId");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Empno")
                        .HasColumnName("EMPNo");

                    b.Property<int>("EnteredBy");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("InTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("OutTime");

                    b.Property<DateTime>("WorkingDate")
                        .HasColumnType("date");

                    b.HasKey("RosterId")
                        .HasName("PK_Tbl_RosterDetail");

                    b.HasIndex("Empno");

                    b.ToTable("Tbl_EmployeeRoster");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblEmployeeSalarySupport", b =>
                {
                    b.Property<int>("Essid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ESSid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId");

                    b.Property<string>("ChequNo")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<int>("Empno")
                        .HasColumnName("EMPNo");

                    b.Property<int>("MonthId");

                    b.Property<int>("NoOfPresentDays");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.HasKey("Essid");

                    b.ToTable("Tbl_EmployeeSalarySupport");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblMastAllowances", b =>
                {
                    b.Property<int>("AllowanceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(150);

                    b.Property<int>("EnteredBy");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("AllowanceId")
                        .HasName("PK_Tbl_Mast_SalaryDetail");

                    b.ToTable("Tbl_Mast_Allowances");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblMastBank", b =>
                {
                    b.Property<int>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(150);

                    b.Property<int>("EnteredBy");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("BankId");

                    b.ToTable("Tbl_Mast_Bank");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblMastCommission", b =>
                {
                    b.Property<int>("CommissionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(150);

                    b.Property<int>("EnteredBy");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<decimal?>("Ratio")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("CommissionId")
                        .HasName("PK_Tbl_Mast_CommissionDetail");

                    b.ToTable("Tbl_Mast_Commission");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblMastCreditCardType", b =>
                {
                    b.Property<int>("Cctid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CCTId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Cctid");

                    b.ToTable("Tbl_Mast_CreditCardType");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblMastDeduction", b =>
                {
                    b.Property<int>("DeductionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(150);

                    b.Property<int?>("EnteredBy");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<decimal?>("Ratio")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("DeductionId")
                        .HasName("PK_Tbl_Mast_DeductionDetail");

                    b.ToTable("Tbl_Mast_Deduction");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblMastDepartment", b =>
                {
                    b.Property<int>("DepartmentId");

                    b.Property<int>("BranchId");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(150);

                    b.Property<int>("EnteredBy");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool?>("IsMain");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("DepartmentId");

                    b.HasIndex("BranchId");

                    b.ToTable("Tbl_Mast_Department");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblMastDesignation", b =>
                {
                    b.Property<int>("DesignationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(150);

                    b.Property<int>("EnteredBy");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("DesignationId");

                    b.HasIndex("BranchId");

                    b.ToTable("Tbl_Mast_Designation");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblMastDiscountType", b =>
                {
                    b.Property<int>("Dtid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DTId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Dtid");

                    b.ToTable("Tbl_Mast_DiscountType");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblMastLeaveType", b =>
                {
                    b.Property<int>("LeaveTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AllowDate");

                    b.Property<int>("BranchId");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("EnteredBy");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("LeaveTypeId");

                    b.ToTable("Tbl_Mast_LeaveType");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblMastNationality", b =>
                {
                    b.Property<int>("NationalityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(10);

                    b.Property<int>("EnteredBy");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("NationalityId");

                    b.ToTable("Tbl_Mast_Nationality");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblMastOriginCountry", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(150);

                    b.Property<int>("EnteredBy");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("CountryId");

                    b.ToTable("Tbl_Mast_OriginCountry");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblMastPaymentType", b =>
                {
                    b.Property<int>("Ptid")
                        .HasColumnName("PTId");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("EnteredBy");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Ptname")
                        .IsRequired()
                        .HasColumnName("PTName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Ptid");

                    b.ToTable("Tbl_Mast_PaymentType");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblMastProductCategory", b =>
                {
                    b.Property<int>("CatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CatID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId")
                        .HasColumnName("BranchID");

                    b.Property<string>("CatName")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.HasKey("CatId")
                        .HasName("PK_Category");

                    b.ToTable("Tbl_Mast_ProductCategory");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblMastProductUnits", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UnitID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId")
                        .HasColumnName("BranchID");

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("UnitName")
                        .HasMaxLength(50);

                    b.HasKey("UnitId")
                        .HasName("PK_Units");

                    b.ToTable("Tbl_Mast_ProductUnits");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblMastSuppliers", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SupplierID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(250);

                    b.Property<int?>("BranchId")
                        .HasColumnName("BranchID");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ContactPersonName")
                        .HasMaxLength(100);

                    b.Property<string>("ContactPersonTelNo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(100);

                    b.HasKey("SupplierId")
                        .HasName("PK_Suppliers");

                    b.ToTable("Tbl_Mast_Suppliers");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblMastTreatmentType", b =>
                {
                    b.Property<int>("Ttid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TTId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId");

                    b.Property<string>("ColorCode");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DepartmentId");

                    b.Property<int>("Duration");

                    b.Property<int>("EnteredBy");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Ttname")
                        .IsRequired()
                        .HasColumnName("TTName")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("Ttid")
                        .HasName("PK_Tbl_Master_TreatmentType");

                    b.HasIndex("BranchId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Tbl_Mast_TreatmentType");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblMonth", b =>
                {
                    b.Property<int>("MonthId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("EnteredBy");

                    b.Property<DateTime?>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FinMonth")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("FinYear")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<bool?>("IsDeleted");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("MonthId");

                    b.ToTable("Tbl_Month");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblProduct", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnName("ItemID")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("Barcode")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("BranchId")
                        .HasColumnName("BranchID");

                    b.Property<int?>("CatId")
                        .HasColumnName("CatID");

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ItemName")
                        .HasMaxLength(100);

                    b.Property<decimal?>("LastPurchasePrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("LeadTime")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("MaxQty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("MinQty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ProductSellingPriceItemId")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<decimal?>("ReOrderLevel")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("ReOrderQty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("UnitId")
                        .HasColumnName("UnitID");

                    b.HasKey("ItemId")
                        .HasName("PK_Items");

                    b.HasIndex("ProductSellingPriceItemId");

                    b.ToTable("Tbl_Product");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblProductGindetails", b =>
                {
                    b.Property<string>("Ginno")
                        .HasColumnName("GINNO")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ItemNo")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.HasKey("Ginno", "ItemNo")
                        .HasName("PK_GINDetails");

                    b.ToTable("Tbl_ProductGINDetails");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblProductGinheader", b =>
                {
                    b.Property<string>("Ginno")
                        .HasColumnName("GINNo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("BranchId")
                        .HasColumnName("BranchID");

                    b.Property<DateTime?>("Gindate")
                        .HasColumnName("GINDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsDelete");

                    b.Property<int?>("IsDeletedBy");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime?>("SysDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("UserId");

                    b.HasKey("Ginno")
                        .HasName("PK_GINHeader");

                    b.ToTable("Tbl_ProductGINHeader");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblProductGrndetails", b =>
                {
                    b.Property<string>("Grnno")
                        .HasColumnName("GRNNo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ItemId")
                        .HasColumnName("ItemID")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<decimal?>("PriceVarianceValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50);

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("UnitId")
                        .HasColumnName("UnitID");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Grnno", "ItemId")
                        .HasName("PK_GRNDetails");

                    b.ToTable("Tbl_ProductGRNDetails");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblProductGrnheader", b =>
                {
                    b.Property<string>("Grnno")
                        .HasColumnName("GRNNo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("BranchId")
                        .HasColumnName("BranchID");

                    b.Property<DateTime?>("Grndate")
                        .HasColumnName("GRNDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsCach");

                    b.Property<bool?>("IsDelete");

                    b.Property<int?>("IsDeletedBy");

                    b.Property<string>("Pono")
                        .HasColumnName("PONo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Remarks")
                        .HasMaxLength(50);

                    b.Property<int>("SupplierId")
                        .HasColumnName("SupplierID");

                    b.Property<string>("SupplierInvoiceNo")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("SupplierIvoiceDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("SysDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("UserId")
                        .HasColumnName("UserID");

                    b.HasKey("Grnno")
                        .HasName("PK_GRNHeader");

                    b.ToTable("Tbl_ProductGRNHeader");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblProductPondetails", b =>
                {
                    b.Property<string>("Pono")
                        .HasColumnName("PONo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ItemId")
                        .HasColumnName("ItemID")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50);

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("UnitId")
                        .HasColumnName("UnitID");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Pono", "ItemId")
                        .HasName("PK_PurchasedOrder_Details");

                    b.ToTable("Tbl_ProductPONDetails");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblProductPonheader", b =>
                {
                    b.Property<string>("Pono")
                        .HasColumnName("PONo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("BranchId")
                        .HasColumnName("BranchID");

                    b.Property<bool?>("IsCach");

                    b.Property<bool?>("IsDelete");

                    b.Property<int?>("IsDeletedBy");

                    b.Property<bool?>("IsPurchased")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("Podate")
                        .HasColumnName("PODate")
                        .HasColumnType("datetime");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50);

                    b.Property<int>("SupplierId")
                        .HasColumnName("SupplierID");

                    b.Property<DateTime?>("SysDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("UserId")
                        .HasColumnName("UserID");

                    b.HasKey("Pono")
                        .HasName("PK_PurchasedOrder_Header");

                    b.ToTable("Tbl_ProductPONHeader");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblProductReceptionGrndetail", b =>
                {
                    b.Property<string>("ReceptionGrnno")
                        .HasColumnName("ReceptionGRNNo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ItemId")
                        .HasColumnName("ItemID")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("UnitId")
                        .HasColumnName("UnitID");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ReceptionGrnno", "ItemId")
                        .HasName("PK_ReceptionGRNDetail");

                    b.ToTable("Tbl_ProductReceptionGRNDetail");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblProductReceptionGrnheader", b =>
                {
                    b.Property<string>("ReceptionGrnno")
                        .HasColumnName("ReceptionGRNNo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("BranchId")
                        .HasColumnName("BranchID");

                    b.Property<DateTime>("Grndate")
                        .HasColumnName("GRNDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDelete");

                    b.Property<int?>("IsDeletedBy");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50);

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("UserId")
                        .HasColumnName("UserID");

                    b.HasKey("ReceptionGrnno")
                        .HasName("PK_ReceptionGRNHeader");

                    b.ToTable("Tbl_ProductReceptionGRNHeader");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblProductSellingPrice", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnName("ItemID")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<decimal?>("SellingPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ItemId")
                        .HasName("PK_ItemSellingPrice");

                    b.ToTable("Tbl_ProductSellingPrice");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblProductSrndetails", b =>
                {
                    b.Property<string>("Srnno")
                        .HasColumnName("SRNNo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ItemId")
                        .HasColumnName("ItemID")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<decimal?>("Qry")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50);

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("UnitId")
                        .HasColumnName("UnitID");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Srnno", "ItemId")
                        .HasName("PK_SRNDetails");

                    b.ToTable("Tbl_ProductSRNDetails");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblProductSrnheader", b =>
                {
                    b.Property<string>("Srnno")
                        .HasColumnName("SRNNo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("BranchId")
                        .HasColumnName("BranchID");

                    b.Property<string>("Grnno")
                        .HasColumnName("GRNNo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<bool?>("IsCash");

                    b.Property<bool?>("IsDelete");

                    b.Property<int?>("IsDeletedBy");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Srndate")
                        .HasColumnName("SRNDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("SupplierId")
                        .HasColumnName("SupplierID");

                    b.Property<DateTime?>("SupplierInvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SupplierInvoiceNo")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("SysDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("UserId")
                        .HasColumnName("UserID");

                    b.HasKey("Srnno")
                        .HasName("PK_SRNHeader");

                    b.ToTable("Tbl_ProductSRNHeader");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblRptTempProductSaleIncomeMonthBase", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AprilCount")
                        .HasColumnName("April_Count");

                    b.Property<decimal?>("AprilIncome")
                        .HasColumnName("April_Income")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("FebruaryCount")
                        .HasColumnName("February_Count");

                    b.Property<decimal?>("FebruaryIncome")
                        .HasColumnName("February_Income")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ItemId")
                        .HasColumnName("ItemID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ItemName")
                        .HasMaxLength(350)
                        .IsUnicode(false);

                    b.Property<int?>("JanuaryCount")
                        .HasColumnName("January_Count");

                    b.Property<decimal?>("JanuaryIncome")
                        .HasColumnName("January_Income")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("JulyCount")
                        .HasColumnName("July_Count");

                    b.Property<decimal?>("JulyIncome")
                        .HasColumnName("July_Income")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("JuneCount")
                        .HasColumnName("June_Count");

                    b.Property<decimal?>("JuneIncome")
                        .HasColumnName("June_Income")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("MarchCount")
                        .HasColumnName("March_Count");

                    b.Property<decimal?>("MarchIncome")
                        .HasColumnName("March_Income")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("MayCount")
                        .HasColumnName("May_Count");

                    b.Property<decimal?>("MayIncome")
                        .HasColumnName("May_Income")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("AutoId")
                        .HasName("PK__Tbl_Rpt___6B2329055935D4F4");

                    b.ToTable("Tbl_Rpt_Temp_ProductSaleIncomeMonthBase");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblSystemAutoNo", b =>
                {
                    b.Property<string>("FormType")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("AutoNum");

                    b.Property<bool?>("IsDateUpdated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsEveningUpdated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsMorningUpdated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan?>("LastModifiedTime");

                    b.HasKey("FormType")
                        .HasName("PK_SystemAutoNo");

                    b.ToTable("Tbl_SystemAutoNo");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblUser", b =>
                {
                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("BranchId");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DepartmentId");

                    b.Property<string>("Designation")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool?>("IsActive");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsPasswordChanged");

                    b.Property<string>("MobNo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("PasswordChangedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Token");

                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserType")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("UserName");

                    b.ToTable("Tbl_User");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.Tbl_ConsentFormDaily", b =>
                {
                    b.Property<int>("Cfdid")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConsentBy");

                    b.Property<DateTime>("ConsentDatetime");

                    b.Property<string>("CustomerId");

                    b.Property<string>("DoctorName");

                    b.Property<TimeSpan>("Etime");

                    b.Property<string>("ExplainedBy");

                    b.Property<bool>("IsClientSigned");

                    b.Property<bool>("IsDoctorSinged");

                    b.Property<bool>("IsTherapistSigned");

                    b.Property<string>("NameOfTheTreatment");

                    b.Property<string>("Nic");

                    b.Property<string>("PreviousListOfTreatment");

                    b.Property<string>("Relationship");

                    b.Property<TimeSpan>("Stime");

                    b.Property<string>("TherapistName");

                    b.HasKey("Cfdid");

                    b.ToTable("Tbl_ConsentFormDaily");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.Tbl_ConsentFormIniti", b =>
                {
                    b.Property<int>("Cfid")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrentMedication");

                    b.Property<string>("CurrentlyUsedProduct");

                    b.Property<string>("CustomerId");

                    b.Property<string>("IsAlcoholic");

                    b.Property<string>("IsAllergies");

                    b.Property<string>("IsAnySkinTreatment");

                    b.Property<bool?>("IsAsthma");

                    b.Property<bool?>("IsDiabetes");

                    b.Property<bool?>("IsHeartDisease");

                    b.Property<bool?>("IsHyperlipidemia");

                    b.Property<bool?>("IsHypertension");

                    b.Property<string>("IsMarried");

                    b.Property<string>("IsMenstrualAbnormalities");

                    b.Property<bool?>("IsOther");

                    b.Property<bool?>("IsSinuitis");

                    b.Property<string>("IsSmoking");

                    b.Property<string>("IsSurgical");

                    b.HasKey("Cfid");

                    b.ToTable("Tbl_ConsentFormIniti");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.Tbl_TreatmentDailyUpdate", b =>
                {
                    b.Property<int>("Tduid")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId");

                    b.Property<DateTime?>("Date");

                    b.Property<int?>("DoctorAppointmentId");

                    b.Property<string>("DoctorNote");

                    b.Property<bool?>("IsHair");

                    b.Property<bool?>("IsPaid");

                    b.Property<bool?>("IsSalon");

                    b.Property<bool?>("IsSkinCare");

                    b.Property<bool?>("IsSpa");

                    b.Property<string>("Problem");

                    b.Property<string>("RegNo");

                    b.Property<int?>("ServiceAppointmentId");

                    b.Property<int?>("UserId");

                    b.HasKey("Tduid");

                    b.ToTable("Tbl_TreatmentDailyUpdate");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.Tbl_TreatmentDailyUpdatePhotos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName");

                    b.Property<string>("RegNo");

                    b.Property<int>("Tduid");

                    b.HasKey("Id");

                    b.HasIndex("Tduid");

                    b.ToTable("Tbl_TreatmentDailyUpdatePhotos");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblBranch", b =>
                {
                    b.HasOne("CocoChicApp.EF.Models.TblCompany", "Company")
                        .WithMany("TblBranch")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_Tbl_Branch_Tbl_Company");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblCustomer", b =>
                {
                    b.HasOne("CocoChicApp.EF.Models.TblBranch", "Branch")
                        .WithMany("TblCustomer")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Tbl_Customer_Tbl_Branch");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblCustomerGiftVoucher", b =>
                {
                    b.HasOne("CocoChicApp.EF.Models.TblCustomer", "Customer")
                        .WithMany("TblCustomerGiftVoucher")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Tbl_CustomerGiftVoucher_Tbl_Customer");

                    b.HasOne("CocoChicApp.EF.Models.TblMastDepartment", "Department")
                        .WithMany("TblCustomerGiftVoucher")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Tbl_CustomerGiftVoucher_Tbl_Mast_Department");

                    b.HasOne("CocoChicApp.EF.Models.TblMastPaymentType", "Pt")
                        .WithMany("TblCustomerGiftVoucher")
                        .HasForeignKey("Ptid")
                        .HasConstraintName("FK_Tbl_CustomerGiftVoucher_Tbl_Mast_PaymentType");

                    b.HasOne("CocoChicApp.EF.Models.TblMastTreatmentType", "Tt")
                        .WithMany("TblCustomerGiftVoucher")
                        .HasForeignKey("Ttid")
                        .HasConstraintName("FK_Tbl_CustomerGiftVoucher_Tbl_Mast_TreatmentType");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblCustomerInvoiceHeader", b =>
                {
                    b.HasOne("CocoChicApp.EF.Models.TblMastCreditCardType", "Cct")
                        .WithMany("TblCustomerInvoiceHeader")
                        .HasForeignKey("Cctid");

                    b.HasOne("CocoChicApp.EF.Models.TblCustomer", "Customer")
                        .WithMany("TblCustomerInvoiceHeader")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CocoChicApp.EF.Models.TblMastDepartment", "Department")
                        .WithMany("TblCustomerInvoiceHeader")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Tbl_CustomerInvoiceHeader_Tbl_Mast_Department");

                    b.HasOne("CocoChicApp.EF.Models.TblMastPaymentType", "Pt")
                        .WithMany("TblCustomerInvoiceHeader")
                        .HasForeignKey("Ptid")
                        .HasConstraintName("FK_Tbl_CustomerInvoiceHeader_Tbl_Mast_PaymentType");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblCustomerInvoiceProducts", b =>
                {
                    b.HasOne("CocoChicApp.EF.Models.TblEmployeeDetail", "EmpnoNavigation")
                        .WithMany("TblCustomerInvoiceProducts")
                        .HasForeignKey("Empno")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CocoChicApp.EF.Models.TblCustomerInvoiceHeader", "InvoiceNoNavigation")
                        .WithMany("TblCustomerInvoiceProducts")
                        .HasForeignKey("InvoiceNo")
                        .HasConstraintName("FK_Tbl_CustomerInvoiceProducts_Tbl_CustomerInvoiceHeader");

                    b.HasOne("CocoChicApp.EF.Models.TblProduct", "Product")
                        .WithMany("TblCustomerInvoiceProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblCustomerInvoiceTreatment", b =>
                {
                    b.HasOne("CocoChicApp.EF.Models.TblCustomerScheduleTreatment", "Cst")
                        .WithMany("TblCustomerInvoiceTreatment")
                        .HasForeignKey("Cstid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CocoChicApp.EF.Models.TblEmployeeDetail", "EmpnoNavigation")
                        .WithMany("TblCustomerInvoiceTreatment")
                        .HasForeignKey("Empno")
                        .HasConstraintName("FK_Tbl_CustomerInvoiceTreatment_Tbl_EmployeeDetail");

                    b.HasOne("CocoChicApp.EF.Models.TblCustomerInvoiceHeader", "InvoiceNoNavigation")
                        .WithMany("TblCustomerInvoiceTreatment")
                        .HasForeignKey("InvoiceNo")
                        .HasConstraintName("FK_Tbl_CustomerInvoiceTreatment_Tbl_CustomerInvoiceHeader");

                    b.HasOne("CocoChicApp.EF.Models.TblMastTreatmentType", "Tt")
                        .WithMany("TblCustomerInvoiceTreatment")
                        .HasForeignKey("Ttid")
                        .HasConstraintName("FK_Tbl_CustomerInvoiceTreatment_Tbl_Mast_TreatmentType");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblCustomerSchedule", b =>
                {
                    b.HasOne("CocoChicApp.EF.Models.TblCustomer", "Customer")
                        .WithMany("TblCustomerSchedule")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Tbl_CustomerSchedule_Tbl_Customer");

                    b.HasOne("CocoChicApp.EF.Models.TblMastDepartment", "Department")
                        .WithMany("TblCustomerSchedule")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Tbl_CustomerSchedule_Tbl_Mast_Department");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblCustomerScheduleTreatment", b =>
                {
                    b.HasOne("CocoChicApp.EF.Models.TblCustomerSchedule", "Cs")
                        .WithMany("TblCustomerScheduleTreatment")
                        .HasForeignKey("Csid")
                        .HasConstraintName("FK_Tbl_CustomerScheduleTreatment_Tbl_CustomerSchedule");

                    b.HasOne("CocoChicApp.EF.Models.TblEmployeeDetail", "EmpnoNavigation")
                        .WithMany("TblCustomerScheduleTreatment")
                        .HasForeignKey("Empno")
                        .HasConstraintName("FK_Tbl_CustomerScheduleTreatment_Tbl_EmployeeDetail");

                    b.HasOne("CocoChicApp.EF.Models.TblMastTreatmentType", "Tt")
                        .WithMany("TblCustomerScheduleTreatment")
                        .HasForeignKey("Ttid")
                        .HasConstraintName("FK_Tbl_CustomerScheduleTreatment_Tbl_Mast_TreatmentType");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblEmployeeAllowances", b =>
                {
                    b.HasOne("CocoChicApp.EF.Models.TblMastAllowances", "Allowance")
                        .WithMany("TblEmployeeAllowances")
                        .HasForeignKey("AllowanceId")
                        .HasConstraintName("FK_Tbl_EmployeeAllowances_Tbl_Mast_Allowances1");

                    b.HasOne("CocoChicApp.EF.Models.TblEmployeeDetail", "EmpnoNavigation")
                        .WithMany("TblEmployeeAllowances")
                        .HasForeignKey("Empno")
                        .HasConstraintName("FK_Tbl_EmployeeAllowances_Tbl_EmployeeDetail1");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblEmployeeBasicSalary", b =>
                {
                    b.HasOne("CocoChicApp.EF.Models.TblEmployeeDetail", "EmpnoNavigation")
                        .WithMany("TblEmployeeBasicSalary")
                        .HasForeignKey("Empno")
                        .HasConstraintName("FK_Tbl_EmployeeBasicSalary_Tbl_EmployeeDetail");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblEmployeeCommision", b =>
                {
                    b.HasOne("CocoChicApp.EF.Models.TblMastCommission", "Commission")
                        .WithMany("TblEmployeeCommision")
                        .HasForeignKey("CommissionId")
                        .HasConstraintName("FK_Tbl_EmployeeCommision_Tbl_Mast_Commission1");

                    b.HasOne("CocoChicApp.EF.Models.TblEmployeeDetail", "EmpnoNavigation")
                        .WithMany("TblEmployeeCommision")
                        .HasForeignKey("Empno")
                        .HasConstraintName("FK_Tbl_EmployeeCommision_Tbl_EmployeeDetail1");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblEmployeeDeduction", b =>
                {
                    b.HasOne("CocoChicApp.EF.Models.TblMastDeduction", "Deduction")
                        .WithMany("TblEmployeeDeduction")
                        .HasForeignKey("DeductionId")
                        .HasConstraintName("FK_Tbl_EmployeeDeduction_Tbl_Mast_Deduction1");

                    b.HasOne("CocoChicApp.EF.Models.TblEmployeeDetail", "EmpnoNavigation")
                        .WithMany("TblEmployeeDeduction")
                        .HasForeignKey("Empno")
                        .HasConstraintName("FK_Tbl_EmployeeDeduction_Tbl_EmployeeDetail1");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblEmployeeDetail", b =>
                {
                    b.HasOne("CocoChicApp.EF.Models.TblMastBank", "Bank")
                        .WithMany("TblEmployeeDetail")
                        .HasForeignKey("BankId")
                        .HasConstraintName("FK_Tbl_EmployeeDetail_Tbl_Mast_Bank");

                    b.HasOne("CocoChicApp.EF.Models.TblMastOriginCountry", "Country")
                        .WithMany("TblEmployeeDetail")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Tbl_EmployeeDetail_Tbl_Mast_OriginCountry");

                    b.HasOne("CocoChicApp.EF.Models.TblMastDepartment", "Department")
                        .WithMany("TblEmployeeDetail")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Tbl_EmployeeDetail_Tbl_Mast_Department");

                    b.HasOne("CocoChicApp.EF.Models.TblMastDesignation", "Designation")
                        .WithMany("TblEmployeeDetail")
                        .HasForeignKey("DesignationId")
                        .HasConstraintName("FK_Tbl_EmployeeDetail_Tbl_Mast_Designation");

                    b.HasOne("CocoChicApp.EF.Models.TblMastNationality", "Nationality")
                        .WithMany("TblEmployeeDetail")
                        .HasForeignKey("NationalityId")
                        .HasConstraintName("FK_Tbl_EmployeeDetail_Tbl_Mast_Nationality");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblEmployeeLeave", b =>
                {
                    b.HasOne("CocoChicApp.EF.Models.TblEmployeeDetail", "EmpnoNavigation")
                        .WithMany("TblEmployeeLeave")
                        .HasForeignKey("Empno")
                        .HasConstraintName("FK_Tbl_EmployeeLeave_Tbl_EmployeeDetail");

                    b.HasOne("CocoChicApp.EF.Models.TblMastLeaveType", "LeaveType")
                        .WithMany("TblEmployeeLeave")
                        .HasForeignKey("LeaveTypeId")
                        .HasConstraintName("FK_Tbl_EmployeeLeave_Tbl_Mast_LeaveType");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblEmployeeRoster", b =>
                {
                    b.HasOne("CocoChicApp.EF.Models.TblEmployeeDetail", "EmpnoNavigation")
                        .WithMany("TblEmployeeRoster")
                        .HasForeignKey("Empno")
                        .HasConstraintName("FK_Tbl_RosterDetail_Tbl_EmployeeDetail");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblMastDepartment", b =>
                {
                    b.HasOne("CocoChicApp.EF.Models.TblBranch", "Branch")
                        .WithMany("TblMastDepartment")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Tbl_Mast_Department_Tbl_Branch");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblMastDesignation", b =>
                {
                    b.HasOne("CocoChicApp.EF.Models.TblBranch", "Branch")
                        .WithMany("TblMastDesignation")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Tbl_Mast_Designation_Tbl_Branch");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblMastTreatmentType", b =>
                {
                    b.HasOne("CocoChicApp.EF.Models.TblBranch", "Branch")
                        .WithMany("TblMastTreatmentType")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Tbl_Mast_TreatmentType_Tbl_Branch");

                    b.HasOne("CocoChicApp.EF.Models.TblMastDepartment", "Department")
                        .WithMany("TblMastTreatmentType")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Tbl_Mast_TreatmentType_Tbl_Mast_Department");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.TblProduct", b =>
                {
                    b.HasOne("CocoChicApp.EF.Models.TblProductSellingPrice", "ProductSellingPriceItem")
                        .WithMany("TblProduct")
                        .HasForeignKey("ProductSellingPriceItemId");
                });

            modelBuilder.Entity("CocoChicApp.EF.Models.Tbl_TreatmentDailyUpdatePhotos", b =>
                {
                    b.HasOne("CocoChicApp.EF.Models.Tbl_TreatmentDailyUpdate", "TreatmentDailyUpdate")
                        .WithMany("TreatmentDailyUpdatePhotos")
                        .HasForeignKey("Tduid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
